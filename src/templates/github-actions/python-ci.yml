name: Python CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Lint with flake8
      run: |
        if command -v flake8 >/dev/null; then
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        fi

    - name: Format check with black
      run: |
        if command -v black >/dev/null; then
          black --check .
        fi

    - name: Import sort check with isort
      run: |
        if command -v isort >/dev/null; then
          isort --check-only .
        fi

    - name: Type check with mypy
      run: |
        if command -v mypy >/dev/null; then
          mypy . --ignore-missing-imports
        fi

    - name: Security check with bandit
      run: |
        if command -v bandit >/dev/null; then
          bandit -r . -f json || true
        fi

    - name: Test with pytest
      run: |
        if command -v pytest >/dev/null; then
          pytest --cov=./ --cov-report=xml
        else
          python -m unittest discover
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
